SimpleNounChunk := OpenRegex {
  <chunk="B-NP"> <chunk="I-NP">* (?:<pos="POS">? <chunk="I-NP">*)*
}
NounChunk := TypedOpenRegex {
  (?:@SimpleNounChunk <string="of">)* @SimpleNounChunk
}
Verb := OpenRegex {
        // Optional adverb
        <pos="RB">?
        // Modal or other verbs
        <pos="MD" | pos=/VB[DPZGN]?/>
        // Optional particle/adverb
        <pos="RP">? <pos="RB">?

}
Word := OpenRegex {
  <pos="$" | pos="PRP$" | pos="CD" | pos="DT" | pos=/JJS?R?/ | pos=/NNP?S?/ | pos="POS" | pos="PRP" | pos="RB" | pos=/RB[RS]/ | pos=/VB[NG]/>
}
Prep := OpenRegex {
  <pos="IN" | pos="TO" | pos="RP"> <pos="RB">?
}
ShortRelation := TypedOpenRegex {
  // (VP?)+
  (?:@Verb (?:@Prep)?)+
}
LongRelation := TypedOpenRegex {
  // (V(W*P+)?)+
  (?:@Verb (?:(?:@Word)* (?:@Prep)+)?)+
}
Relation := TypedOpenRegex {
  @ShortRelation | @LongRelation
}

consume ReVerbExtraction := TypedOpenRegex {
  (<Arg1>:@NounChunk) (<Rel>:@Relation) (<Arg2>:@NounChunk) (?: <!type = 'Relation'> | $)
}
